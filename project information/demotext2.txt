// Canvasni tanlash
const canvas = document.getElementById("animation-canvas");
const ctx = canvas.getContext("2d");

// Canvas o'lchamlarini sozlash
function resizeCanvas() {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
}
resizeCanvas();
window.addEventListener("resize", resizeCanvas);

// Zarracha obyekti
class Particle {
  constructor(x, y, size, speedX, speedY, color) {
    this.x = x;
    this.y = y;
    this.size = size;
    this.speedX = speedX;
    this.speedY = speedY;
    this.color = color;
  }

  draw() {
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
    ctx.fillStyle = this.color;
    ctx.fill();
  }

  update() {
    this.x += this.speedX;
    this.y += this.speedY;

    // Ekrandan chiqib ketgan zarrachalarni qayta joylashtirish
    if (this.x > canvas.width || this.x < 0) this.speedX *= -1;
    if (this.y > canvas.height || this.y < 0) this.speedY *= -1;
  }
}

// Zarrachalar massivi
const particles = [];
const particleCount = 50;

// Zarrachalarni yaratish
for (let i = 0; i < particleCount; i++) {
  const size = Math.random() * 3 + 1; // Zarrachalar kattaligi
  const x = Math.random() * canvas.width;
  const y = Math.random() * canvas.height;
  const speedX = Math.random() * 1 - 0.5; // Harakat tezligi
  const speedY = Math.random() * 1 - 0.5;
  const color = `rgba(255, 255, 255, ${Math.random()})`; // Oq va shaffof rang

  particles.push(new Particle(x, y, size, speedX, speedY, color));
}

// Animatsiya funksiyasi
function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height); // Canvasni tozalash
  particles.forEach((particle) => {
    particle.update();
    particle.draw();
  });
  requestAnimationFrame(animate); // Animatsiyani davom ettirish
}

// Animatsiyani boshlash
animate();
